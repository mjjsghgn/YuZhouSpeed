using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.EventSystems;
using UnityEngine.UI;

public class Zhuan : MonoBehaviour
{

    public InputField inputField;
    //椭圆半长轴a、半短轴b、
    public float a, b;
? ? //椭圆三角函数的角θ
? ? float angle, angle1;
    //椭圆三角函数的角变化的速度
    public float angleSpeed = 1f;
    //三个float变量
    float z, x, y;
    //椭圆轨迹上的坐标
    Vector3 _pos;
    public Transform earth;
    //绕地球圆转速度
    private float speed = 80;
    private float x1, y1;
    //航天器飞行速度
    private double fspeed;
    private Text text;
    private Button button, button1;
    float i, j,n;
    private bool flag;
    public GameObject moon, mubiao;
    public GameObject trans, trans1;
    private float t;
    /*
    [SerializeField] private Transform points;                          //控制点父对象
    private List<Transform> point_tranList = new List<Transform>();     //控制点列表
    [SerializeField] private int pointCount = 100;                      //曲线点的个数
    private List<Vector3> line_pointList;                               //曲线点列表

    [SerializeField] private Transform lookTarget;                      //看向目标
    [SerializeField] private GameObject ball;                           //运动物体
    [SerializeField] private float time0 = 0;                           //曲线点之间移动时间间隔
    private float timer = 0;                    //计时器
    private int item = 1;                       //曲线点的索引
    private bool isTrue = false;*/
    // public Animation animation;
    private float g = 9.8f;
    private double _posx;
    private double _posy;
    private float _t;
    public GameObject Fracture;
    public List<Vector3> points;
    private LineRenderer line;
   
    public float w = 7;
    public float h = 4;
    public float r = 5;

    // private GameObject[] m_gb;

    void Start()
    {
        angle = 0;
        i = 0;
        transform.position = new Vector3(-90, 10, 222);
        button = GameObject.Find("fashe").GetComponent<Button>();
        button = GameObject.Find("chongzhi").GetComponent<Button>();
        
    }
    public void ChongZhi()
    {
        GameObject.Find("InputField").GetComponent<InputField>().text = "km/s";
        trans.SetActive(false);
        trans1.SetActive(false);
        moon.transform.position = new Vector3(-90, 10, 222);
        //Fracture.SetActive(false);       
        //Destroy(Fracture.gameObject);
        moon.SetActive(true);
        angle = 0;
        flag = false; ;
        t = 0;
     //   StartCoroutine(WaitAndPrint(0.015f));



    }
    public void FaShe()
    {
        inputField = GameObject.Find("InputField").GetComponent<InputField>();
        fspeed = Convert.ToDouble(inputField.text);
        moon.transform.position = new Vector3(-90, 10, 222);
        flag = true;
    }
    private void Update()
    {
        if (flag == true)
        {
            if (fspeed > 0 && fspeed < 7.9)
            {
                // moon.transform.position = new Vector3(-90, 10, 222);
                //  moon.AddComponent<Rigidbody>();
                t = 0;
                PingPao();
              
              
            }
           
            else
            {
                if (fspeed == 7.9)
                {
                    Destroy(GetComponent<Rigidbody>());
                    trans1.SetActive(true);
                    trans.SetActive(false);
                    RotateAround();
                }
                else
                {
                    if (fspeed > 7.9 && fspeed < 11.2)
                    {

                         trans.SetActive(true);
                         trans1.SetActive(false);
                         RotateTuoYuan();
                  

                    }
                    else
                    {
                        if (fspeed >= 11.2 && fspeed < 16.7)
                        {
                           
                            //  Debug.Log("OK1");
                        }
                        else
                        {
                            // Debug.Log(fspeed);
                        }
                    }
                }
            }

        }
        else
        {
            moon.transform.position = new Vector3(-90, 10, 222);
        }
    }
     public void RotateTuoYuan()
     {
         angle += Time.deltaTime * 0.8f;
         z = 222;
         y = b * Mathf.Sin(angle) + 15;
         x = -a * Mathf.Cos(angle);
         _pos = new Vector3(x, y, z);
         transform.position = Vector3.Lerp(_pos, _pos, Time.deltaTime);
     }

    public void RotateAround()
    {
        transform.RotateAround(earth.transform.position, Vector3.forward, speed * Time.deltaTime);

    }

    public void PingPao()
    {

        
            t += 0.005f;
            double dx = 50* t; //Sx = vt            
            double dy = Physics2D.gravity.magnitude * t * t; //竖直上抛运动 Sy=Vot- gt*t/2
            float dxx = (float)dx;
            float dyy = (float)dy;
            Vector3 pos = new Vector3(transform.position.x + dxx, transform.position.y +dyy, 222);
            moon.transform.position = pos;

           
        }
       
       
    
    //检测是否与地面碰撞
    public void OnCollisionEnter(Collision collision)
    {        
      if(collision.collider.tag =="Player")
        {
            
            Fracture.transform.position = moon.transform.position;
            Fracture.SetActive(true);
            moon.SetActive(false);
    

    }


}
